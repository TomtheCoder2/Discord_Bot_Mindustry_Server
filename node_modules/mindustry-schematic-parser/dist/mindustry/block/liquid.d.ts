import { Block } from './block';
import { Canvas } from 'canvas';
import { SchematicTile } from '../../schematic';
declare class Pump extends Block {
    output: {
        item: boolean;
        liquid: boolean;
    };
    draw(tile: SchematicTile, canvas: Canvas): Promise<void>;
}
export declare class MechanicalPump extends Pump {
    constructor();
}
export declare class RotaryPump extends Pump {
    constructor();
}
export declare class ThermalPump extends Pump {
    constructor();
}
export declare class Conduit extends Block {
    constructor();
    draw(): Promise<void>;
}
export declare class PulseConduit extends Conduit {
    constructor();
}
export declare class PlatedConduit extends Conduit {
    constructor();
}
export declare class LiquidRouter extends Block {
    constructor();
    output: {
        item: boolean;
        liquid: boolean;
    };
    draw(tile: SchematicTile, canvas: Canvas): Promise<void>;
}
export declare class LiquidTank extends LiquidRouter {
    constructor();
}
export declare class LiquidJunction extends Block {
    constructor();
    output: {
        item: boolean;
        liquid: boolean;
    };
    draw(tile: SchematicTile, canvas: Canvas): Promise<void>;
}
export declare class BridgeConduit extends Block {
    constructor();
    output: {
        item: boolean;
        liquid: boolean;
    };
    draw(tile: SchematicTile, canvas: Canvas): Promise<void>;
}
export declare class PhaseConduit extends BridgeConduit {
    constructor();
}
export {};
