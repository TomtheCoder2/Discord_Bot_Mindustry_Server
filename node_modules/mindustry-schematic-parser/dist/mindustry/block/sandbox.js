"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Illuminator = exports.LightBlock = exports.LiquidVoid = exports.LiquidSource = exports.ItemVoid = exports.ItemSource = exports.PowerVoid = exports.PowerSource = void 0;
var tslib_1 = require("tslib");
var util_1 = require("../../util");
var block_1 = require("./block");
var category = 'sandbox';
var SandBoxBlock = /** @class */ (function (_super) {
    tslib_1.__extends(SandBoxBlock, _super);
    function SandBoxBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SandBoxBlock.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({ tile: tile, canvas: canvas, category: category, layers: [this.name] })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return SandBoxBlock;
}(block_1.Block));
var PowerSource = /** @class */ (function (_super) {
    tslib_1.__extends(PowerSource, _super);
    function PowerSource() {
        return _super.call(this, {
            name: 'power-source',
            requirements: {},
            size: 1,
        }) || this;
    }
    return PowerSource;
}(SandBoxBlock));
exports.PowerSource = PowerSource;
var PowerVoid = /** @class */ (function (_super) {
    tslib_1.__extends(PowerVoid, _super);
    function PowerVoid() {
        return _super.call(this, {
            name: 'power-void',
            requirements: {},
            size: 1,
        }) || this;
    }
    return PowerVoid;
}(SandBoxBlock));
exports.PowerVoid = PowerVoid;
var ItemSource = /** @class */ (function (_super) {
    tslib_1.__extends(ItemSource, _super);
    function ItemSource() {
        return _super.call(this, {
            name: 'item-source',
            requirements: {},
            size: 1,
        }) || this;
    }
    ItemSource.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var config, imgName, image;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({ tile: tile, canvas: canvas, category: category, layers: [this.name] })];
                    case 1:
                        _a.sent();
                        config = tile.config;
                        imgName = config ? 'center' : 'cross';
                        return [4 /*yield*/, util_1.blockAsset(category, imgName)];
                    case 2:
                        image = _a.sent();
                        this.renderImage({
                            canvas: canvas,
                            tile: tile,
                            image: config ? util_1.tintImage(image, config.color, 1) : image,
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    return ItemSource;
}(SandBoxBlock));
exports.ItemSource = ItemSource;
var ItemVoid = /** @class */ (function (_super) {
    tslib_1.__extends(ItemVoid, _super);
    function ItemVoid() {
        return _super.call(this, {
            name: 'item-void',
            requirements: {},
            size: 1,
        }) || this;
    }
    return ItemVoid;
}(SandBoxBlock));
exports.ItemVoid = ItemVoid;
var LiquidSource = /** @class */ (function (_super) {
    tslib_1.__extends(LiquidSource, _super);
    function LiquidSource() {
        return _super.call(this, {
            name: 'liquid-source',
            requirements: {},
            size: 1,
        }) || this;
    }
    LiquidSource.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var config, imgName, image;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({ tile: tile, canvas: canvas, category: category, layers: [this.name] })];
                    case 1:
                        _a.sent();
                        config = tile.config;
                        imgName = config ? 'center' : 'cross';
                        return [4 /*yield*/, util_1.blockAsset(category, imgName)];
                    case 2:
                        image = _a.sent();
                        this.renderImage({
                            canvas: canvas,
                            tile: tile,
                            image: config ? util_1.tintImage(image, config.color, 1) : image,
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    return LiquidSource;
}(SandBoxBlock));
exports.LiquidSource = LiquidSource;
var LiquidVoid = /** @class */ (function (_super) {
    tslib_1.__extends(LiquidVoid, _super);
    function LiquidVoid() {
        return _super.call(this, {
            name: 'liquid-void',
            requirements: {},
            size: 1,
        }) || this;
    }
    return LiquidVoid;
}(SandBoxBlock));
exports.LiquidVoid = LiquidVoid;
var LightBlock = /** @class */ (function (_super) {
    tslib_1.__extends(LightBlock, _super);
    function LightBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LightBlock;
}(SandBoxBlock));
exports.LightBlock = LightBlock;
var Illuminator = /** @class */ (function (_super) {
    tslib_1.__extends(Illuminator, _super);
    function Illuminator() {
        return _super.call(this, {
            name: 'illuminator',
            requirements: { graphite: 12, silicon: 8 },
            size: 1,
            powerConsumption: 0.05,
        }) || this;
    }
    return Illuminator;
}(LightBlock));
exports.Illuminator = Illuminator;
//# sourceMappingURL=sandbox.js.map