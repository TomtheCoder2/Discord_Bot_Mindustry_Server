"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LargeLogicDisplay = exports.LogicDisplay = exports.MemoryBank = exports.MemoryCell = exports.HyperProcessor = exports.LogicProcessor = exports.MicroProcessor = exports.SwitchBlock = exports.Message = void 0;
var tslib_1 = require("tslib");
var block_1 = require("./block");
var category = 'logic';
var LogicBlock = /** @class */ (function (_super) {
    tslib_1.__extends(LogicBlock, _super);
    function LogicBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LogicBlock.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({ tile: tile, canvas: canvas, category: category, layers: [this.name] })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return LogicBlock;
}(block_1.Block));
var Message = /** @class */ (function (_super) {
    tslib_1.__extends(Message, _super);
    function Message() {
        return _super.call(this, {
            name: 'message',
            requirements: { graphite: 5 },
            size: 1,
        }) || this;
    }
    return Message;
}(LogicBlock));
exports.Message = Message;
var SwitchBlock = /** @class */ (function (_super) {
    tslib_1.__extends(SwitchBlock, _super);
    function SwitchBlock() {
        return _super.call(this, {
            name: 'switch',
            requirements: { graphite: 5 },
            size: 1,
        }) || this;
    }
    return SwitchBlock;
}(LogicBlock));
exports.SwitchBlock = SwitchBlock;
var MicroProcessor = /** @class */ (function (_super) {
    tslib_1.__extends(MicroProcessor, _super);
    function MicroProcessor() {
        return _super.call(this, {
            name: 'micro-processor',
            requirements: { copper: 80, lead: 50, silicon: 30 },
            size: 1,
        }) || this;
    }
    return MicroProcessor;
}(LogicBlock));
exports.MicroProcessor = MicroProcessor;
var LogicProcessor = /** @class */ (function (_super) {
    tslib_1.__extends(LogicProcessor, _super);
    function LogicProcessor() {
        return _super.call(this, {
            name: 'logic-processor',
            requirements: { lead: 320, silicon: 60, graphite: 60, thorium: 50 },
            size: 2,
        }) || this;
    }
    return LogicProcessor;
}(LogicBlock));
exports.LogicProcessor = LogicProcessor;
var HyperProcessor = /** @class */ (function (_super) {
    tslib_1.__extends(HyperProcessor, _super);
    function HyperProcessor() {
        return _super.call(this, {
            name: 'hyper-processor',
            requirements: { lead: 450, silicon: 130, thorium: 75, 'surge-alloy': 50 },
            size: 3,
        }) || this;
    }
    return HyperProcessor;
}(LogicBlock));
exports.HyperProcessor = HyperProcessor;
var MemoryCell = /** @class */ (function (_super) {
    tslib_1.__extends(MemoryCell, _super);
    function MemoryCell() {
        return _super.call(this, {
            name: 'memory-cell',
            requirements: { graphite: 30, silicon: 30 },
            size: 1,
        }) || this;
    }
    return MemoryCell;
}(LogicBlock));
exports.MemoryCell = MemoryCell;
var MemoryBank = /** @class */ (function (_super) {
    tslib_1.__extends(MemoryBank, _super);
    function MemoryBank() {
        var _this = _super.call(this) || this;
        _this.name = 'memory-bank';
        _this.requirements = { graphite: 80, silicon: 80, 'phase-fabric': 30 };
        _this.size = 2;
        return _this;
    }
    return MemoryBank;
}(MemoryCell));
exports.MemoryBank = MemoryBank;
var LogicDisplay = /** @class */ (function (_super) {
    tslib_1.__extends(LogicDisplay, _super);
    function LogicDisplay() {
        return _super.call(this, {
            name: 'logic-display',
            requirements: { lead: 100, silicon: 50, metaglass: 50 },
            size: 3,
        }) || this;
    }
    return LogicDisplay;
}(LogicBlock));
exports.LogicDisplay = LogicDisplay;
var LargeLogicDisplay = /** @class */ (function (_super) {
    tslib_1.__extends(LargeLogicDisplay, _super);
    function LargeLogicDisplay() {
        var _this = _super.call(this) || this;
        _this.name = "large-" + _this.name;
        _this.requirements = {
            lead: 200,
            silicon: 150,
            metaglass: 100,
            'phase-fabric': 75,
        };
        _this.size = 6;
        return _this;
    }
    return LargeLogicDisplay;
}(LogicDisplay));
exports.LargeLogicDisplay = LargeLogicDisplay;
//# sourceMappingURL=logic.js.map