"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OilExtractor = exports.Cultivator = exports.WaterExtractor = exports.BlastDrill = exports.LaserDrill = exports.PneumaticDrill = exports.MechanicalDrill = void 0;
var tslib_1 = require("tslib");
var block_1 = require("./block");
var category = 'production';
var Drill = /** @class */ (function (_super) {
    tslib_1.__extends(Drill, _super);
    function Drill() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.output = {
            item: true,
            liquid: false,
        };
        return _this;
    }
    Drill.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({
                            tile: tile,
                            canvas: canvas,
                            category: category,
                            layers: [this.name, this.name + '-rotator', this.name + '-top'],
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return Drill;
}(block_1.Block));
var MechanicalDrill = /** @class */ (function (_super) {
    tslib_1.__extends(MechanicalDrill, _super);
    function MechanicalDrill() {
        return _super.call(this, {
            name: 'mechanical-drill',
            requirements: { copper: 12 },
            size: 2,
        }) || this;
    }
    return MechanicalDrill;
}(Drill));
exports.MechanicalDrill = MechanicalDrill;
var PneumaticDrill = /** @class */ (function (_super) {
    tslib_1.__extends(PneumaticDrill, _super);
    function PneumaticDrill() {
        return _super.call(this, {
            name: 'pneumatic-drill',
            requirements: { copper: 18, graphite: 10 },
            size: 2,
        }) || this;
    }
    return PneumaticDrill;
}(Drill));
exports.PneumaticDrill = PneumaticDrill;
var LaserDrill = /** @class */ (function (_super) {
    tslib_1.__extends(LaserDrill, _super);
    function LaserDrill() {
        return _super.call(this, {
            name: 'laser-drill',
            requirements: { copper: 35, graphite: 30, silicon: 30, titanium: 20 },
            size: 3,
            powerConsumption: 1.1,
        }) || this;
    }
    return LaserDrill;
}(Drill));
exports.LaserDrill = LaserDrill;
var BlastDrill = /** @class */ (function (_super) {
    tslib_1.__extends(BlastDrill, _super);
    function BlastDrill() {
        return _super.call(this, {
            name: 'blast-drill',
            requirements: { copper: 65, silicon: 60, titanium: 50, thorium: 75 },
            size: 4,
            powerConsumption: 3.0,
        }) || this;
    }
    return BlastDrill;
}(Drill));
exports.BlastDrill = BlastDrill;
var WaterExtractor = /** @class */ (function (_super) {
    tslib_1.__extends(WaterExtractor, _super);
    function WaterExtractor() {
        var _this = _super.call(this, {
            name: 'water-extractor',
            requirements: { metaglass: 30, graphite: 30, lead: 30 },
            size: 2,
            powerConsumption: 1.5,
        }) || this;
        _this.output = {
            item: false,
            liquid: true,
        };
        return _this;
    }
    return WaterExtractor;
}(Drill));
exports.WaterExtractor = WaterExtractor;
var Cultivator = /** @class */ (function (_super) {
    tslib_1.__extends(Cultivator, _super);
    function Cultivator() {
        return _super.call(this, {
            name: 'cultivator',
            requirements: { copper: 25, lead: 25, silicon: 10 },
            size: 2,
            powerConsumption: 0.9,
        }) || this;
    }
    Cultivator.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({
                            tile: tile,
                            canvas: canvas,
                            category: category,
                            layers: [this.name, this.name + '-top'],
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return Cultivator;
}(block_1.Block));
exports.Cultivator = Cultivator;
var OilExtractor = /** @class */ (function (_super) {
    tslib_1.__extends(OilExtractor, _super);
    function OilExtractor() {
        return _super.call(this, {
            name: 'oil-extractor',
            requirements: {
                copper: 150,
                graphite: 175,
                lead: 115,
                thorium: 115,
                silicon: 75,
            },
            size: 3,
            powerConsumption: 3.0,
        }) || this;
    }
    return OilExtractor;
}(Drill));
exports.OilExtractor = OilExtractor;
//# sourceMappingURL=production.js.map