"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Unloader = exports.Vault = exports.Container = exports.CoreNucleus = exports.CoreFoundation = exports.CoreShard = void 0;
var tslib_1 = require("tslib");
var util_1 = require("../../util");
var block_1 = require("./block");
var category = 'storage';
var StorageBlock = /** @class */ (function (_super) {
    tslib_1.__extends(StorageBlock, _super);
    function StorageBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StorageBlock.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var image;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({
                            tile: tile,
                            canvas: canvas,
                            category: category,
                            layers: [this.name],
                        })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, util_1.blockAsset(category, this.name + '-team')];
                    case 2:
                        image = _a.sent();
                        this.renderImage({
                            canvas: canvas,
                            image: util_1.tintImage(image, '#ffa600'),
                            tile: tile,
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    return StorageBlock;
}(block_1.Block));
var CoreShard = /** @class */ (function (_super) {
    tslib_1.__extends(CoreShard, _super);
    function CoreShard() {
        return _super.call(this, {
            name: 'core-shard',
            requirements: { copper: 1000, lead: 800 },
            size: 3,
        }) || this;
    }
    return CoreShard;
}(StorageBlock));
exports.CoreShard = CoreShard;
var CoreFoundation = /** @class */ (function (_super) {
    tslib_1.__extends(CoreFoundation, _super);
    function CoreFoundation() {
        return _super.call(this, {
            name: 'core-foundation',
            requirements: { copper: 3000, lead: 3000, silicon: 2000 },
            size: 4,
        }) || this;
    }
    return CoreFoundation;
}(StorageBlock));
exports.CoreFoundation = CoreFoundation;
var CoreNucleus = /** @class */ (function (_super) {
    tslib_1.__extends(CoreNucleus, _super);
    function CoreNucleus() {
        return _super.call(this, {
            name: 'core-nucleus',
            requirements: { copper: 8000, lead: 8000, silicon: 5000, thorium: 4000 },
            size: 5,
        }) || this;
    }
    return CoreNucleus;
}(StorageBlock));
exports.CoreNucleus = CoreNucleus;
var Container = /** @class */ (function (_super) {
    tslib_1.__extends(Container, _super);
    function Container() {
        return _super.call(this, {
            name: 'container',
            requirements: { titanium: 100 },
            size: 2,
        }) || this;
    }
    return Container;
}(StorageBlock));
exports.Container = Container;
var Vault = /** @class */ (function (_super) {
    tslib_1.__extends(Vault, _super);
    function Vault() {
        var _this = _super.call(this) || this;
        _this.name = 'vault';
        _this.requirements = { titanium: 250, thorium: 125 };
        _this.size = 3;
        return _this;
    }
    return Vault;
}(Container));
exports.Vault = Vault;
var Unloader = /** @class */ (function (_super) {
    tslib_1.__extends(Unloader, _super);
    function Unloader() {
        var _this = _super.call(this, {
            name: 'unloader',
            requirements: { titanium: 25, silicon: 30 },
            size: 1,
        }) || this;
        _this.output = {
            item: true,
            liquid: false,
        };
        return _this;
    }
    Unloader.prototype.draw = function (tile, canvas) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var config, image;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.render({ tile: tile, canvas: canvas, category: category, layers: [this.name] })];
                    case 1:
                        _a.sent();
                        config = tile.config;
                        if (!config) return [3 /*break*/, 3];
                        return [4 /*yield*/, util_1.blockAsset(category, this.name + '-center')];
                    case 2:
                        image = _a.sent();
                        this.renderImage({
                            canvas: canvas,
                            image: util_1.tintImage(image, config.color, 1),
                            tile: tile,
                        });
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return Unloader;
}(block_1.Block));
exports.Unloader = Unloader;
//# sourceMappingURL=storage.js.map